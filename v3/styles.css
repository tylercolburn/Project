@charset "utf-8";
/*
   V3
   Author: Tyler Colburn 
   Date: 5.29.20
   */
html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
    margin:0;
    padding:0;
    border:0;
    outline:0;
    font-size:100%;
    vertical-align:baseline;
    background:transparent;
}

body {
    line-height:1;
}

article,aside,details,figcaption,figure,
footer,header,hgroup,menu,nav,section {
    display:block;
}

nav ul {
    list-style:none;
}

blockquote, q {
    quotes:none;
}

blockquote:before, blockquote:after,
q:before, q:after {
    content:'';
    content:none;
}
a {
    margin:0;
    padding:0;
    font-size:100%;
    vertical-align:baseline;
    background:transparent;
}
ins {
    background-color:#ff9;
    color:#000;
    text-decoration:none;
}

mark {
    background-color:#ff9;
    color:#000;
    font-style:italic;
    font-weight:bold;
}

del {
    text-decoration: line-through;
}

abbr[title], dfn[title] {
    border-bottom:1px dotted;
    cursor:help;
}

table {
    border-collapse:collapse;
    border-spacing:0;
}
hr {
    display:block;
    height:1px;
    border:0;  
    border-top:1px solid #cccccc;
    margin:1em 0;
    padding:0;
}

input, select {
    vertical-align:middle;
}
html{
    background-color: black;
    background-color: hsl(0, 0%, 0%);
    color: white;
}
header{
    padding-bottom: 0px;
}
h1{
    text-shadow: 2px 2px #ff0000;
    font-size: 75px;
    text-align: center;
    padding: 15px;
}
nav > ul > li {
    list-style-type: none;
    display: inline-block;
    background-color: #333333;
    border-right: .5px solid #bbbbbb;
} 
nav.horizontal li{
    margin-top: 5px;
    display: block;
    float: left;
    width: 16.5%;
  }
.center{
    display:block;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
}
#footer1{
    text-align: center;
}
footer{
    width: 100%;
    height: 80px;
    position: absolute;
    bottom: 0;
    left: 0;
    text-align: center;
    padding-top: 30px;
    clear: both;
}
li a {
    display: block;
    text-align: center;
    padding: 14px 16px;
    color: white;
    text-decoration: none;
}
li:last-child{
    border-right: none;
}
li a:hover{
    color: hsla(0, 0%, 100%, 0.7);
    background-color: black;
}
a[href]{
    color: rgb(52, 98, 250);
}
body{
    display: flex;
    flex-direction: column;
}
body > div > section > p{
    font-size: 130%;
    line-height: 1.25;
    width: 40%;
}
img.resize {
    max-width:50%;
    max-height:50%;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
  
  section#left {
    float: left;
    width: 46%;
    margin-right: 2%;
    margin-left: 2%;
 }
 section#right {
    float: left;
    width: 46%;
    padding-bottom: 20px;
 }
 
 figure {
    border: 1px #cccccc solid;
    padding: 4px;
    margin: 10%;
    border-radius: 35px;
  } 
  figcaption {
    border-radius: 35px;
    background-color: #333333;
    color: white;
    font-style: italic;
    padding: 3px;
    text-align: center;
    font-size: 25px;
  }
    img{
        border-radius: 35px;
        opacity: 0.75;
    }
/*M6LO7 Demonstrate how to format a table with CSS 
(CSS, group your table styles together and note the overall impact they have on the HTML)*/
    table, th, td {
        color: white;
        border: 3px solid white;
        background-color: #333333;
        width: 50px;
      }
      th{
          text-align: center;
          font-size: 25px;
          height: 45px;
      }
       td{
        text-align: center;
        font-size: 25px;
        height: 100px;
      }
      /* M5LO3 Use media queries to format a page differently for phones 
      vs. PCs. (CSS, note where these are in your CSS and describe the overall impact they have on the site) */
      /* didn't really work and struggling with this. */
      /* Confused on how to really use @media to change stuff on the webpage I looked it up and I still don't get it 
      and even when i try and test stuff it doesn't seem to change almost anything at all to how I want it */
      @media only screen and (max-width: 600px){
          /* confused on how this nav isn't working in here */
          /* nav{
            nav.horizontal li{
                margin-top: 5px;
                display: block;
                width: 100%;
              } */
          /* div{
              width: 100%;
          }
          th{
              width: 15px;
          } */
      }
      /* Use CSS for pull-down menus (or collapsible/expandable areas) 
      (CSS, note where the menu is on your site and how it behaves) */
      /* don't feel like I really want a drop down in my site but here is how I would set one up other than the position */
      .dropbtn {
        background-color: #333333;
        color: rgb(52, 98, 250);
        padding: 14px;
        border: none;
        font-size: 16px;
      }
      .dropdown {
        position: relative;
        display: inline-block;
      }
      .dropdown-content {
        display: none;
        position: absolute;
        background-color: white;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
      }
      .dropdown-content a {
        color: rgb(52, 98, 250);
        padding: 12px 16px;
        text-decoration: none;
        display: block;
      }
      .dropdown-content a:hover {
          background-color: #333333;
        }
      .dropdown:hover .dropdown-content {
          display: block;
        }
      .dropdown:hover .dropbtn {
          background-color: black;
        }
        /* M5LO5 Demonstrate the use of flexboxes on a web page (CSS document where you use 
        flexboxes; explain their impact on the page's layout; this can be a new page or a 
        redo of an existing page)
        M5LO7 Demonstrate use of properties of flexbox containers (CSS, document what flexbox container 
        properties you use and their impacts, for one CSS selector using them) */

        /* Didn't work the way I intended need to get it so one side can be flex and the other can too
        but not carry the right pictures to the left*/
        
        /* .flex-container {
            display: flex;
            flex-direction: column;
          } */